★　spam_blockerプラグインについて　★

■目次

　概要
　サポートしているプラグイン
　サポートしているスパム対策
　ログ記録・スパム通知
　設定・設置
　その他
　履歴

◆概要

・本プラグインは、blosxom.cgiや既存のプラグインに手を加えずに主として
　コメントスパムを防止するblosxom向けのプラグインです。
　（但し、動作確認はblosxom starter kitのみ）
・スパム対策を適用するプラグインは
　　writeback系, guestbook, newentry, mailpost
　をデフォルトでサポート。他のプラグインへの適用も可能。
・writeback系プラグインに対してはトラックバックスパム対策もサポート
・refererプラグインに数行追加すればリファラスパム対策も可能。
・ログ記録機能追加によりスパムの実体を把握する事が可能。
　ログ記録時はブログ上に最新のスパム表示とメールによるスパム通知が可能。
・間違ってスパムと判断された投稿を正常投稿に復帰しやすいように、ログ
　記録書式を、スターターキットのwriteback及びguestbookの記録形式を採用。
・スパムチェックは、コメント用に13種類・トラックバック用に12種類・リファラ
　用に5種類用意されており、それぞれ個別に有効・無効の設定が可能です。
　対策が効きすぎて、スパムで無いコメントやトラックバックを弾いてしまう
　場合には、問題となるスパムチェックのみ無効に設定する事が可能。
　（携帯ブラウザに対しては設定は固定になります）
・訪問者の条件を変えれず、スパムとして弾く可能性の有るスパムチェックに
　ついては、それぞれ専用のホワイトリストを用意。
　問題となるスパムチェックを有効にしたまま、特定の訪問者だけそのスパム
　チェックのみ無効とする事が出来ます。
　この訪問者のPCが踏み台とされて投稿されるケースでも他のチェックを有効
　とする事でスパム対策の有効性を維持出来るはずです。
・デフォルトでは過去の報告から誤判定が起き難いスパムチェックにみを有効
　に設定。

◆サポートしているプラグイン

・writeback plugin （但し、動作確認はblosxom starter kitのみ）

　コメントやトラックバックを受け付けて表示させるプラグインです。
　blosxom starter kitには標準で同梱されております。

　blosxom starter kitは、http://hail2u.net/archives/bsk.htmlから
　入手出来ます。

　本プラグインでは、writeback pluginに対して送られてくる
　コメントスパム及びトラックバックスパムをブロックし、ブロック
　した内容をログに記録する事が可能です。

　blosxom starter kit以外のwriteback系のプラグインでは動作確認は
　しておりませんが、writebackと名乗っていれば他のプラグインでも
　動作するはずです。

　＊　writebackplusプラグインで動作している事が確認されています。

・guestbook plugin

　アンディーさん作のblosxom用サイドＢＢＳです。

　現在、リニューアルしたアンディーさんのサイトでは公開されていませんが、
　http://hail2u.net/archives/blugins.htmlから入手出来ます。

　本プラグインでは、guestbook pluginに対して送られてくるコメントスパムを
　ブロックし、ブロックした内容をログに記録する事が可能です。

・newentry plugin

　fukazawaさん作のblosxom掲示板プラグインです。
　ブログではエントリ投稿は自分が行うのですが、掲示板として使う為に
　エントリ投稿コメント投稿と同じ様に誰でも可能にしています。

　http://fukaz55.main.jp/projects/newentry/index.htmlから入手出来ます。

　本プラグインでは、newentry pluginに対して送られてくるコメントスパムを
　ブロックし、ブロックした内容をログに記録する事が可能です。

・mailpost plugin

　color99作のblosxomでメール投稿を可能にするプラグインです。

　http://kangaroo.oh.land.to/blosxom/plugin/から入手出来ます。

　本プラグインでは、mailpost pluginに対して送られてくるコメントスパムを
　ブロックし、ブロックした内容をログに記録する事が可能です。

・referer plugin

　他のページから訪問した場合に元のページの情報をリファラから収集して
　表示させるプラグインです。

　http://www.blosxom.com/plugins/logs/referer.htm

　本プラグインでは、referer pluginに対して送られてくるリファラスパムを
　検出し、その内容をログに記録する事が可能です。

　但し、リファラスパムは投稿という行為が無いので、本プラグインでスパムを
　ブロックする事は出来ません。本プラグインから送られるエラーコードを
　referer pluginで受け取りリファラ記録をしない様にeferer plugin自体も
　改造が必要です。改造は簡単です。改造方法は後述。

◆サポートしているスパム対策

・環境変数のリファラチェック（コメントのみ）

　環境変数のリファラをチェックし、コメントが設置サイト以外から投稿された
　場合、スパムと判断します。

　ブラウザから送られるスパムには多分100%効果を発揮します。
　（多分、リファラ偽造は出来ないはずなので）

　PERL等で自動投稿スクリプトから送られるスパムに対しても有効ですが、
　リファラを偽造する事は可能ですので、上級スパマーには効きません。
　しかし、現実にはかなり効果が有ります。

　リファラを偽造されない限り、これのみでスパムをチェックする事が出来ます。

　以前は阻止率が高かったのですが、最近は、リファラを偽造したスパムが
　多く来ており、これだけではスパムを防ぎきれなくなっています。

　デフォルト：　有効

　注）携帯からのコメントには強制的に無効に設定しています。

・環境変数の言語チェック（コメント／トラックバック）

　このチェックはコメントとトラックバックで動作が異なります。

　コメント投稿については、更に２通りのチェックに分かれます。

　　弱い対策：　環境変数の言語環境の情報が無い場合、スパムと判断します。
　　強い対策：　コメント投稿環境が日本語環境以外を、スパムと判断します。

　弱い対策では言語情報の有無だけをみてるので言語環境に依存しません。
　ブラウザ以外から自動投稿スクリプトで投稿してくるスパムには有効です。
　（言語情報をつけて来られたら効果は有りませんが…）
　ブラウザから投稿されるスパムに対しては、ブラウザが言語情報をつけて
　くるはずですので、効果が有りません。

　強い対策では、中国や韓国等も含め、日本語環境以外からコメント投稿した場合、
　スパムとしてブロックしますので、極めて有効な対策です。
　日本語環境からのスパムには当然ながら効果は有りませんし、環境変数の言語を
　偽造されたら効果はありません。
　当然ながら海外向けブログを開設する場合等にはこれを使用してはいけません。　
　なお、このチェック時の判断部分は、guestbookプラグイン作者のアンディーさん
　にメールで使用許可を得て、guestbookプラグインの物と同じにしてあります。

　トラックバックについては、
　　「環境変数の言語情報が有るトラックバックに対してのみ、その言語情報が
　　　日本語以外ならばスパムと判断」
　する様にしています。（言語情報が無ければスパムと判定しません）
　つまり、「海外からの投稿です」と宣言しているものに対してのみ、スパム
　として弾きます。
　しかし、通常、ブログツールからのトラックバックは言語情報を送りませんので、
　海外からのトラックバックも大部分は問題なく受けられると思います。
　ブログツールからトラックバックを送れず、ブラウザからJavaScript等で送って
　くるケースではスパムとして弾かれてしまいますので、海外からのトラックバックを
　受けれないケースも出てくる可能性があります。

　デフォルト：　有効（コメントは弱い対策）

　注）携帯からのコメント／トラックバックには強制的に無効に設定しています。

・投稿本文のアスキーチェック（コメント／トラックバック）

　投稿された本文に英数字や制御文字等、7bitコードで表現出来る文字以外が
　含まれているかどうかチェックします。
　現在のコメントスパムの主流は欧米の7bitコード圏からの物であり、これは
　非常に有効な対策ですが、中国や韓国等からのスパムには効果がありません。
　但し、こういうチェックをしている事を分析されてしまうと、スパマーには
　それなりに破る方法は作れそうですが...。
　
　又、当然ながら海外向けブログを開設する場合等にはこれは使用してはいけません。
　
　注）最近、海外からのコメントに２バイト系文字が含まれるスパムが送られて
　　　来るという事例が有る様ですので、いずれこの対策も効果が減ってくると
　　　思われますが、現時点では、依然として有効な方法と捉えております。

　デフォルト：　無効

　注）携帯からのコメント／トラックバックには強制的に有効に設定しています。

・無コメントチェック（コメント／トラックバック）

　本文に何も記載されていない（無コメント）かどうかチェックします。

　デフォルト：　有効

　注）携帯からのコメント／トラックバックには強制的に有効に設定しています。
　
・環境変数http_accept_encodingチェック（コメントのみ）

　スパマーは身元を伏せる為にプロキシ経由でスパムを送って来るケースが多く、
　プロキシ経由のコメントを遮断するのは有効なスパム対策になります。
　プロキシを経由すると多くの場合送信側のいろんな情報を隠してしまいます。
　そこで、このチェックでは環境変数http_accept_encodingにgzipが含まれて
　いなければスパムと判定します。

　デフォルト：　無効

　注）会社等からの投稿時にこのチェックで弾いてしまうケースが有る様です。
　　　企業内プロキシ経由するケースだと思います。

　注）携帯からのコメントには強制的に無効に設定しています。

・ダイナミックパスワードチェック（コメント／トラックバック）

　オリジナル方式のパスワードチェックです。

　通常のパスワードと異なるのは、

　　パスワードの値が暗号化されている
　　パスワードの値が１秒毎に変わる
　　（投稿ページ又はトラックバックアドレス表示ページをブラウザで開いた
　　　時刻をパスワードに使用しています。）

　事です。

　そして、更に特徴的なのは、ここで利用されるパスワードチェックでは、
　パスワードに

　　　有効期間

　が設定されているという事です。（有効期間指定は変更可能です。）

　さて、自動投稿スパムの送り方を分析すると、大きく分けて２通りと思います。
　1)コメント投稿画面生成直後（多くは5秒以内）、おそらくは自動でコメント投稿画面
　　情報を毎回取得し、その情報をコメント自動投稿スクリプトへ反映させてスパムを
　　送信するパターン。私の所へ来ているコメントスパムは１００％近くこのパターン
　　です。
　　FC2やseasaa等のブログサービスでは、エントリ投稿直後にコメントスパムが
　　送られて来る事例が多く報告されていますが、この場合はpingサーバーへの
　　通知データがトリガとなっているだけで、その後は上記の仕組みになると思われ
　　ます。
　2)過去に取得したコメントやトラックバック画面のデータから取得したデータを
　　反映済みの自動投稿スクリプトでスパムを送る場合。
　　FC2やseasaa等のブログサービスでの対策を検討した時に、このタイプのスパムが
　　かなり有る事が分かっています。特にトラックバックスパムでこの傾向が強い
　　様な印象を持っています。
　　おそらく、コメント投稿ページやトラックバックアドレスが書かれたページを
　　検索結果（過去のキャッシングデータになる）から取得して自動投稿スクリプト
　　へ反映させてスパム送信していると思われます。　　

　このチェックを有効にしておくと、デフォルトではパスワードが確定してから
　１０秒以内（トラックバックでは１秒以内）及び１日以降の投稿はスパムとして
　弾かれます。

　1)のコメント投稿に対してはほぼ100%弾く事が出来ます。
　トラックバックはおそらく１秒では効果は無いでしょうが、ここの時間をあまり
　長くすると正常投稿をも弾いてしまう事になりますので、1)のトラックバック
　についてはこのチェックでの対策は難しいです。
　
　2)についてはコメントもトラックバックも効果が有るはずです。
　が、2)のタイプのスパムは私のサイトには来ていないので、対策効果は未確認
　です。　

　さて、このチェックはどういう仕組みで実現されるかというと、コメントについては
　フレーバーに　記述されている投稿フォーム内にhidden属性で
　　このパスワード
　を追加しておき、トラックバックについてはトラックバックアドレスの最後に
　　?＋パスワード
　を追加して、ゲット形式にしておきます。
　そうしますと、コメント投稿やトラックバックでは必ずこのパスワードが使用される
　事になるのですが、このパスワードを本プラグインで解読するとパスワード確定時の
　時刻を取得する事が出来、現在の時刻と比較する事で判定出来ます。

　デフォルト：　無効

　注）この対策は動的生成をしているblosxomだからこそ効果が有ります。
　　　静的生成しているページでは静的生成した時点でパスワードが確定してしまい、
　　　１日以上経つと本チェックで弾かれてしまいます。

・コンティニュアスポスティングチェック（コメント／トラックバック）

　同一ＩＰアドレスからの連続投稿を防止するスパムチェックです。
　スパムとして判定する投稿間隔は変更可能です。

　デフォルト：　無効

・ユーザーエージェント（LWP default）チェック
　（コメント／トラックバック／リファラスパム）

　自動投稿スクリプトでスパムを送る場合、LWPと呼ばれるパールモジュールを
　使うケースが多いと思われます。

　私の所へスパムを連続的に送って来た多くのケースではユーザーエージェントと
　呼ばれる環境変数にlibwww-perlという文字が含まれています。

　実は、LWPモジュールはlibwww-perlの事でして、LWPモジュールを使う時に
　ユーザーエージェントを指定しないとデフォルトでこれが入るのです。

　ですので、この文字列が含まれている場合は、ブラウザでの投稿ではないと判断し、
　弾く様にしています。

　やってくるスパマーに依存しますが、多分５０％位は効果が有ると思います。
　副作用はちょっと思いつきませんし、これまでそういう報告は有りませんので、
　設定しておいて損は無いでしょう。

　デフォルト：　有効

・ユーザーエージェント無しチェック
  （コメント／トラックバック／リファラスパム）

　スパムで有っても通常はユーザーエージェントを送って来るのが普通なのですが、
　プロキシ経由で送られてくるスパムの中にはユーザーエージェントを送って
　来ない物が有りました
　そこで、ユーザーエージェントが無ければスパムとして判定するチェックを
　追加しました。
　おそらく弊害は無いと思いますが、デフォルトでは一応無効としておきます。

　デフォルト：　無効

・ドメイン無しチェック（コメント／トラックバック／リファラスパム）

　IPアドレスからドメインを探し、ドメインが表示されるかどうかチェックします。
　スパマーはDOMAINを名乗らないIPアドレスを使う場合が多いので、ドメインが
　表示されない場合は弾く様にします。
　スパマーにとっては嫌な対策ではないかと思いますが、スパマーでない人の
　ドメインが表示されないケースがあるかもしれないというのがちょっと心配。

　デフォルト：　無効

　注）学校からの投稿時にこちらで弾いたケースが有りました。
　　　多分、学校のＰＣがDNSに登録されていない為と思われます。

　注）携帯からのトラックバックには強制的に有効に設定しています。

　この機能を使うには、gethostbyaddrが使えるサーバーで有る事が前提
　となります。（iswebでは使えませんが、xreaやland.toでは使えます。）
　お使いのサーバーの仕様を確認してお使い下さい。
　（この機能を有効にして自分で投稿してみればすぐに分かりますけどね。）

　！！　注意　！！

　また、後述する様に$feedburner_timeoutを0以外に設定した場合、この設定は
　強制的に無効になります。

・トップレベルドメインチェック（コメント／トラックバック／リファラスパム）

　IPアドレスの一番右の.より右の部分は、トップレベルドメイン（ＴＬＤ）と
　呼ばれます。ここは、２文字で国を示す場合と、.comとか.net等の様に３文字で
　表示される場合が有ります。（もっと違うケースが有るかもしれません。）
　
　英小文字２文字で有る場合のみ、ホワイトカントリーとして設定した国以外の
　コードで有れば、スパムと判定します。例えば、jp us auと設定しておきます
　と、日本、米国、オーストリア以外はスパムと判定します。
　
　特に、海外からのスパムに対しては効果が有りますが、海外でも.comとかからの
　スパムには効きません。

　デフォルト：　無効

　注）ＴＬＤは２文字でカントリーコードで無い場合が有ります。
　　　なんと、land.toからのトラックバックはカントリーコードがtoです。
　　　弾かないように必ずtoは入れておいて下さい。

・禁止ワードチェック（コメント／トラックバック／リファラスパム）

　投稿内容のどれか及びリファラの中に自分で設定した禁止ワードが１つでも
　含まれていたらスパムと判断します。
　（注：デフォルトでは禁止ワードをURL欄かリファラの中だけに限定して
　　います。それ以外の内容に適用させるには$inh_strongを"1"に設定します。）

　多くのスパマーは、自分のサイトへの誘導が最終目的で有る事から、投稿
　内容の中にURLを含む事になりますし、リファラスパムはリファラのURLへ
　誘導する事が目的です。このURLを偽造するとスパマーも目的を達成
　出来ない事から、URLの中から禁止ワードを設定するのが有効です。
　
　禁止ワードは適切に選ばないと、スパムでないコメントやトラックバックを
　弾いてしまいますので注意深く設定して下さい。

　私の所で実際に使用している禁止ワードをデフォルトで有効に設定して
　おきます。

　デフォルト：　有効

・a tag チェック（コメント／トラックバック）

　URL/E-Mail欄以外にaタグ（リンク）が書かれているかどうかチェックします。
　広告目的のスパマーの場合、aタグ（リンク）を沢山書いて来ますので、
　絶大な効果が有るでしょう。

　他の目的のスパマーには効果が無いですが、多くのスパマーは公告目的が
　主なので効果大です。

　デフォルト：　有効

・言語とユーザーエージェントの複合チェック（トラックバックのみ）

　環境変数の言語環境及びユーザーエージェントを複合したチェックです。

　ブログからトラックバックを送ってくる場合、環境変数の言語情報を送って来ず、
　通常はブラウザと異なるユーザーエージェントを送って来ます。
　（Blog Ping PingはMozilla/3.0を送ってきますので、これは例外扱いする。）

　そこで、環境変数の言語情報が送られて来ない場合で、ユーザーエージェントで
　ブラウザを名乗る場合は、スパムと判断します。

　但し、過去の経験上、Blog Ping PingはMozilla/3.0を送ってきますので、
　これは例外扱いする。（本当はBlog Ping Ping側が直すべきだと思うけど）

　この例外扱いにより、対策の抜け穴が開いてしまいますが、Mozilla/3.0と
　わざと古いバージョンを名乗ってスパムを送ってくるケースは少ないと考えています。

　なお、ブラウザからJavaScriptを使ってトラックバックを送ってくる場合は
　言語情報も合わせて送ってくるはずなので、弾く事は無いはずです。

　後は、Blog Ping Pingのような例外が他にあれば、弾いてしまうのが問題では
　ありますが、現状では少ないと思っています。

　デフォルト：　有効

　注）携帯からのトラックバックには強制的に無効に設定しています。

◆ログ記録・スパム通知

・ログ記録

　本プラグインでは３つのログを記録出来ます。

　デフォルトでは、

　　logfile.cgi　　　：コメント／トラックバックスパムを記録
　　reflogfile.cgi　 ：リファラスパムを記録
　　iplogfile.cgi　　：前回の訪問者のipアドレスと投稿時間を記録

　の名前で記録されますが、記録ファイル名は変更可能です。

　iplogfile.cgiは短時間で連続投稿していないかチェックする為に
　準備されていますが、このチェックとは無関係に常時記録する様に
　しています。

　logfile.cgiとreflogfile.cgiは%switchのloggerを1にセットして
　いて、それぞれ該当するスパムが来た場合にのみ、スパムの内容を
　記録します。

　logfile.cgiの基本記録部分（前半）は、スターターキットの
　writeback又はguestbookの投稿記録内容と全く同じです。
　(newentryはwritebackと記録形式が同じです。)

　logfile.cgiの管理用記録部分（後半）のログ項目名とその意味は
　以下の通り。

    local time: 投稿された時間
    sb_error_code: スパムチェック結果のエラーコード
    language: 投稿元で使用されているブラウザの言語環境
    accept_encoding: 投稿元で使用されているブラウザで許可されているエンコード形式
    user_agent: 投稿元で使用されているブラウザのユーザーエージェント
　　password: ダイナミックパスワードの値（time形式）
    plugin: 投稿されたプラグイン名（現在の所、writeback/newentryの区別のみ）
    req_url : 投稿されたページのURL
    referrer: 投稿元のリファラ

　reflogfile.cgiでは、

　　remote_addr:
　　remote_host:
　　local time:
　　sb_error_code:
　　req_url :
　　referrer:

　のみを記録していますが、logfile.cgiの基本記録部分（前半）と
　管理用記録部分（後半）で記録されている物と同じです。
　（reflogfile.cgiで不要と思われる物は省いています）

　本プラグインでは、チェック機能を有効にした全てのスパムチェックを行います。
　スパムチェックＮＧの物は、チェックしてＮＧだった全てのエラーコードを
　":"を区切り文字として並べてログのsb_error_code:欄に残します。

　使用しているエラーコードの一覧です。

　comment(13)

    r    : リファラチェックエラー 
    c-l  : 言語チェックエラー 
    ae   : accept_encodingチェックエラー 
    c-dp : ダイナミックユーザーパスワードチェックエラー
    c-up : コンティニュアスポスティングチェックエラー 
    c-a  : アスキーチェックエラー 
    c-nc : 無コメントチェックエラー 
    c-ua : ユーザーエージェントチェックエラー 
    c-nu : ユーザーエージェント無しチェックエラー
    c-nd : ドメイン表示無しチェックエラー
    c-tc : トップレベルドメインチェックエラー
    c-at : aタグチェックエラー 
    c-w  : 禁止ワードチェックエラー

　trackback(12)

    t-l  : 言語チェックエラー 
    t-l_ua: 言語チェックとユーザーエージェントチェックの複合チェック
    t-dp : ダイナミックユーザーパスワードチェックエラー
    t-up : コンティニュアスポスティングチェックエラー 
    t-a  : アスキーチェックエラー 
    t-nc : 無コメントチェックエラー 
    t-ua : ユーザーエージェントチェックエラー 
    t-nu : ユーザーエージェント無しチェックエラー
    t-nd : ドメイン表示無しチェックエラー
    t-tc : トップレベルドメインチェックエラー
    t-at : aタグチェックエラー 
    t-w  : 禁止ワードチェックエラー

　referrer spam(5)

    r-ua ：ユーザーエージェントチェックエラー 
    r-nu : ユーザーエージェント無しチェックエラー
    r-nd : ドメイン表示無しエラー
    r-tc : トップレベルドメインチェックエラー
    r-w  : 禁止ワードチェックエラー
    
　複数エラーが出る場合には、sb_error_code: r : l : c-a : c-ua の様に
  表示されます。

　もし、弾いたコメントの中に正常投稿の物が混じっていれば、このログを見る
　事で後で投稿した人とコンタクトを取り、正常コメントとして処理しなおす
　事が出来ますので、ログ記録を有効にされる事をお薦めします。
　
　全ての正常投稿を弾いているならば、暫定的には当該チェックを無効に設定し、
　ＢＢＳなどでフィードバックをかけて下さい。
　スクリプトで対応出来る場合には、恒久対策として対応します。

　（訪問者の投稿環境がリファラ無しなどで）特定の訪問者のみ弾く場合、
　後述する選択ホワイトリスト機能で、特定訪問者のみ当該チェックを
　無効にして対応下さい。

・ログ記録文字コード変換機能

　トラックバックはいろんな文字コードのブログから送られてきますので、
　そのまま記録した場合、ログファイル内で文字コードが混在されてしまい、
　後で特定の記録を見る都度文字コードを変換しなくてはいけなく不便です。

　バージョン0.39e以降ではログ記録時に自ブログの文字コードに変換出来る
　様にしました。

　my $char_convert  = 1; # 新規ログを$charsetの文字コードに変換する時"1"に設定(default "1")

　上記の変数を"1"に設定しておけば、次回スパムログ記録時に変換されます。

・過去ログ文字コード変換機能（古いバージョンのログが残っている場合のみ）

　新規ログが文字コード変換されても、過去ログについては投稿時の文字コードで
　記録されていますので、ログファイルを開くと過去ログの影響で文字化けします。
　そういう場合には、過去ログの文字コードを一旦変換してしまう事をお薦めします。
　（完全に変換出来ない場合もあるかもしれません。）
　本プラグインではその変換機能も用意しています。

　$char_convert_for_old_record = 1; # 過去のログファイルの記録を$charsetの
　                                    文字コードに変換する時"1"に設定(default "0")

　上記の変数を"1"に設定しておけば、次回スパムログ記録時に変換されます。
　一度変換してしまえば以降変換は不要ですので、上記変数を"0"に設定下さい。

・ログ記録制限機能

　ログはどんどん増えていきますので、時々、削除が必要です。
　バージョン0.39e以降ではログ記録制限機能が有ります。

　$log_limit     = 1;  　　# ログ記録量の制限をする場合"1"に設定(default "0")
　$max_log_block = 50;     # 記録するログの上限 (1ログ500bytes前後として、50ログ25kbytes程度）
　$max_reflog_block = 100; # 記録するリファラログの上限 (1ログ500bytes前後として、100ログ50kbytes程度）

　上記の変数を設定する事で記録制限を自由に設定出来ます。

　注）ログ制限は設定変更後、次回スパムログ記録時から有効になります。

　＊）ログ記録制限機能は完全ではなく、バグが残っている可能性があります。
　　　過去の事例ではログが一部或いは全て消えてしまう場合がありました。
　　　現在、この症状は改善されていますが、完全ではないかもしれません。
　　　ログ記録で不具合がございましたら、報告いただけると助かります。

・最新のスパム表示

　バージョン0.39e以降では、ログ記録を行っている場合にスパムが来た事を
　ブログで見れる様に、記録されている最新のスパム情報（日時と名前）のみを
　ブログに表示出来る機能を追加しています。

　フレーバー上の表示したい位置に

　　$spam_blocker::sb_last_info

　と記述して下さい。（本文書の最後の方でももう一度説明しています。）

・スパム通知機能

　バージョン0.39e以降では、ログ記録を行っている場合にスパムが来た事を
　メールで通知する機能を追加しています。

　$notify_mail = 1　に設定しておくとこの機能が有効になります。

　スパム通知機能については少しだけ工夫しています。

  前のスパムとの投稿間隔が　$notify_stop_time  で設定された時間（単位は分）
　以内なら通知設定でもメールを送りません。
　これにより連続スパム攻撃が有った場合、記録制限数以内のログを残しますが、
　メールは連続スパムの最初のみ通知される事になります。　

◆設定・設置

1)　簡単設置

0spam_blockerをデフォルト設定のままで文字コードを自分のブログの設定に
合わせて変更してプラグインフォルダーに設置します。

my_cript.plをblosxom.cgiを設置してあるディレクトリに設置します。
（v.1.00より追加でこの作業が必要になりました）

この２つの作業だけで、標準のblosxomも含め、デフォルトで有効
に設定しているスパム対策が機能します。

writeback, writebackplus等、post時にpluginパラメーターをwritebackと名乗る
プラグイン及びguestbookとnewentryに同時に対応します。
refererプラグインに対するスパム対策はデフォルトで無効にしてあります。

この簡単設置の設定でも多くのスパムを弾けるはずです。
これで弾けないケースが有れば、以下の内容を良く読んでカスタマイズ設置する
事でスパム対策を強化しましょう。

スパムチェック機能の有効・無効を切り替えたり、ログ記録を有効にする為には、
カスタマイズ設置が必要ですので、とりあえず簡単設置をしておいて、後日、
本ドキュメントをじっくり読んでカスタマイズ設置するというがいいでしょう。

注）UTF-8でblosxomを設定している場合は、UTF-8Nでファイルをセーブして下さい。
　　UTF-8でセーブした物を使うと多分動かなくなります！！！

2)　カスタマイズ設置

・変数設定

%switch:

　各機能の動作を有効・無効切り替えます。
　
　以下の部分は、スパムチェックを個別に設定します。
　=>の右側の数字を0にすると無効に、1にすると有効になります。
　（このドキュメント作成時点で私が使用している設定例を記述しています）

#-- check of posted comment --       < 13 check >
  'r'        => 1, # '1' referrer check
  'c-l'      => 1, # '1' language check
  'ae'       => 1, # '0' accept encoding check
  'c-dp'     => 1, # '0' dynamic password check
  'c-cp'     => 0, # '0' continuous posting check
  'c-a'      => 0, # '0' ascii check
  'c-nc'     => 1, # '1' no comment check
  'c-ua'     => 1, # '1' user agent check
  'c-nu'     => 1, # '0' no user agent check
  'c-nd'     => 1, # '0' no domain check, need gethostbyaddr function
                   #     valid when $feedburner_timeout is not set
  'c-tc'     => 0, # '0' top level domain check, need gethostbyaddr function
                   #     valid when $feedburner_timeout is not set          
  'c-at'     => 1, # '1' a tag check
  'c-w'      => 1, # '1' inhibit word check
#-- check of posted trackback --     < 12 check >
  't-l'      => 1, # '1' language check for trackback
  't-l_ua'   => 1, # '1' language and user agent check --- conbination check
  't-dp'     => 1, # '0' dynamic password check
  't-cp'     => 1, # '0' continuous posting check
  't-a'      => 0, # '0' ascii check
  't-nc'     => 1, # '1' no comment check
  't-ua'     => 1, # '1' user agent check
  't-nu'     => 1, # '0' no user agent check
  't-nd'     => 1, # '0' no domain check, need gethostbyaddr function
                   #     valid when $feedburner_timeout is not set
  't-tc'     => 0, # '0' top level domain check, need gethostbyaddr function
                   #     valid when $feedburner_timeout is not set
  't-at'     => 1, # '1' a tag check
  't-w'      => 1, # '1' inhibit word check
#-- check of non-posted referrer --  < 5 check >  valid when referrer = 1
  'r-ua'     => 1, # '1' user agent check
  'r-nu'     => 1, # '0' no user agent check
  'r-nd'     => 1, # '0' no domain check, need gethostbyaddr function
                   #     valid when $feedburner_timeout is not set
  'r-tc'     => 1, # '0' top level domain check, need gethostbyaddr function
                   #     valid when $feedburner_timeout is not set
  'r-w'      => 1, # '1' inhibit word check  

　dynamic password checkを有効にする場合には、フレーバーやcgiの設定が
　必要になりますが、これについては後述します。

　no domain checkとtop level domain checkは、ご使用のサーバーが
　gethostbyaddr関数をサポートしている事が前提となります。
　サポートしていない場合は無効に設定下さい。
　又、以前、feedburner登録時タイムアウトして登録出来ないという事が有り、
　今は対策していますが、万が一の事を考え、$feedburner_timeoutという
　変数を用意しています。これが1に設定されている場合は、強制的に無効に
　なります。
  
  以下の部分は、「リファラスパムチェック機能全体」、「ログ記録機能」、
  「本スクリプトでスパムをブロックする機能」の有効、無効を設定します。
　=>の右側の数字を0にすると無効に、1にすると有効になります。
　（このドキュメント作成時点で私が使用している設定例を記述しています）
　
#-- fucntion --
  'referrer' => 1, # '0' non-posted referrer check function
  'logger'   => 1, # '0' log recording function  
  'block'    => 1  # '1' spam block function for comment and trackback

　blockは通常は1でお使い下さい。
　 
$disp_charset:

  設置しているブログの文字コードを指定、'UTF-8', 'Shift_JIS', 'EUC-JP'
  より選択して下さい。

@inh_word:

　@inh_wordはinhibit word checkに使う禁止ワードを" "(半角スペース)
　で区切りながら指定します
  online-と'-'までを禁止ワードとする事で、onlineは禁止ワードになりません。

　注）このような事例に対しては、次の@inh_word_addでの対応が良いです。

　禁止ワードは日本語でも英語でも構いませんが、「buy」、「エッチ」、「妻」
　など悪意ない場合に使用する可能性のあるワードを設定してしまうと、スパム
　でなくても排除してしまいますので、ワード選択には注意が必要です。

　多くのスパマーは、自分のサイトへの誘導が最終目的で有る事から、URLは
　特定のパターンが見られます。ここは偽造するとスパマーも目的を達成
　出来ない事から、URLの中から禁止ワードを設定するのが有効です。

@inh_word_add、$add_lr、$add_lr2、my $add_l：

　スパマーは、禁止ワードチェックをすり抜ける為に、URLの中に'-','_'を
　加えている場合があります。

　例えば、

　　http://xxx.yyy.com/buy-propecia.html

  がスパムの中に書かれたスパマーが誘導したいと考えているurlだと
　すると、今後考えられるスパマーが誘導したいアドレスとして、

　　buy, propecia
　　-buy, -propecia
　　buy-, propecia-
　　_buy, _propecia
　　buy_, propecia_
　　=buy, =propecia

　を組み合わせた物が考えられ、実際、そういう組み合わせのスパムが
　送られて来ています。

　これらを全て　@inh_word　に追加していくのは面倒だし、buy等を
　禁止ワードとしてしまうとまずい場合があります。

　そこで、

　　buy, propecia

　は禁止ワードにはせず、

　　-buy, -propecia
　　buy-, propecia-
　　_buy, _propecia
　　buy_, propecia_
　　=buy, =propecia

　を禁止ワードする事を考えました。

　上記例では、

　@inh_word_add = qw(buy propecia);

　と設定し、

　$add_lr = '-'; 
　$add_lr2 = '_'; 
　$add_l = '=';

　と設定します。

　@inh_word_add は追加する禁止ワードのコアとなりますが、それ自体は
　禁止ワードとはなりません。

　$add_lr、$add_lr2 は、@inh_word_addの左又は右に付加して新たな
　禁止ワードを作る為の区切り文字です。
　今の所、２種類の禁止区切り文字だけを登録していますが、他の区切り
　文字が必要で有ればスクリプトを改造して追加しますので、ＢＢＳ等で
　お知らせ願います。

　$add_lは@inh_word_addの左に付加して新たな　禁止ワードを作る為の
　区切り文字です。
　今の所、１種類の禁止区切り文字だけを登録していますが、他の区切り
　文字が必要で有ればスクリプトを改造して追加しますので、ＢＢＳ等で
　お知らせ願います。

　＊）ちょっと分かりにくい機能かもしれません。
　　　この説明で理解出来なければＢＢＳ等で質問して下さい。

　＊）デフォルトでは、私の所で実際に使っている禁止ワードを入れて
　　　有りますので、同じスパマーに対しては効果が有るはずですが、
　　　逆にこういう弊害が有ったとか有ればＢＢＳ等でお知らせ願います。

ここまでのカスタマイズが第１段階になります。

# ---- option 1 ------------------------
# 選択ホワイトリスト機能 − 特定のＩＰアドレスに対して特定のスパムチェック機能を対象外にする

($inh_r,$inh_l,$inh_ae,$inh_a,$inh_nu,$inh_nd,$inh_tc):

　下記の６つのスパムチェック毎に個別にホワイトリスト機能を有効にするかどうかを設定します。

 　 $inh_r：　referrer check
 　 $inh_l：　language check
　  $inh_ae： accept encoding check
　　$inh_a：　ascii check
　　$inh_nu： no user agent check
 　 $inh_nd： no domain check
　　$inh_tu： top level domain check

    default: 全て0

　対応する変数を1にしますと、そのスパムチェックに対するホワイトリスト機能が有効になります。
　選択ホワイトリスト機能が必要でない場合に、少しでも処理量を減らす為にこの変数を用意していますが、
　処理量をあまり気にしない場合は、常時ここを全て1に設定しておけばいいでしょう。

@pass_addr_r：
@pass_addr_l：
@pass_addr_ae：
@pass_addr_a：
@pass_addr_nu：
@pass_addr_nd：
@pass_addr_tc：

　スパムチェック対象外IPアドレスを qw(120.10.3.123 98.1.15.11 345.3.236.1);の様に指定します。
　@inh_wordと同様に半角スペースで区切ります。

　$inh_xxが有効に設定されているリストのみ有効です。

@referrer_pass_domain：

　リファラスパムで自ドメイン以外で対象外にするドメインを指定指定します。
　@inh_wordと同様に半角スペースで区切ります。
　検索エンジン経由で来た場合、スパムとして弾かない様に検索エンジンのドメインを指定しましょう。

　デフォルト： qw(search.yahoo.co.jp search.msn.co.jp www.blogshot.net);

# ---- option 2 ------------------------
# メール通知機能

$notify_mail:

  コメントまたはTrackBackがあった時にメールで通知する時、"1"に設定します。
　Jcodeモジュールが必要です。

  注）　ログ記録している時（$logger = 1）のみ有効です

    default: 0

$sendmail:

　sendmailのパスを指定します。
　設置しているサーバーの仕様に合わせて下さい。
  XREAの場合は、'/usr/sbin/sendmail'です。

$from:

　Fromヘッダに使用するメールアドレスを''の間に記述します。

$to:

　Toヘッダに使用するメールアドレスを''の間に記述します。

$notify_stop_time:

　前のスパムとの投稿間隔がこの値以内なら通知設定でもメールを送りません。
　分単位で指定下さい。

    default: 3

ここまでが第２段階で、２つのオプション設定も完了します。

カスタマイズ設置の場合でも、標準的にはここまでの変更でいいはずです。

更に、必要があれば下記の設定も変更可能です。

# --- Semi-Configurable variables ------ set the following if needed
$strong:

　コメント投稿時のlanguage checkを日本語環境限定にする場合、ここを"1"に設定して下さい。
　
    default: 0

$inh_strong:

　　禁止ワードの対象範囲を切り替えます。

　　　1:　対象範囲がtitle,url,name,blog_name,comment,excerpt.referrer
　　　0:　対象範囲がurl,referrer

　　禁止ワードをURLとリファラ以外の欄にも適用する場合、ここを"1"に設定して下さい。

    default: 0

$feedburner_timeout:

　0.39e以降では問題になる事は無いと思いますが、feedburner登録時にタイムアウトする等の
　問題が起きる場合には、ここを"1"にして下さい。
  gethostbyaddr関数を無効にします。
　強制的にノードメインチェックも無効になります。

    default: 0

$caution_message:

　本プラグインでスパムをブロックした場合に、画面上に表示する警告文を指定します。
　警告文には日本語の使用も可能です。

    default: "You don't have permission to access this site."

　この警告文は以前のバージョンではブラウザにより表示されない場合（ＩＥ）がありましたが、
　v1.00より表示される様に変更しました。

$time_lower：

　コメントに対するダイナミックパスワードの有効期間の下限を指定します。（単位：秒）
　ダイナミックパスワードを指定したページが表示されてから、ここで設定した時間以内に
　投稿された場合、スパムとして弾きます。

    default: 10;        # 10 sec

$time_lower_t：

　トラックバックに対するダイナミックパスワードの有効期間の下限を指定します。（単位：秒）
　ダイナミックパスワードを指定したページが表示されてから、ここで設定した時間以内に
　投稿された場合、スパムとして弾きます。

    default: 1;        # 10 sec

$time_upper：

　ダイナミックパスワードの有効期間の上限を指定します。（単位：秒）
　ダイナミックパスワードを指定したページが表示されてから、ここで設定した時間以降に
　投稿された場合、スパムとして弾きます。

    default: 3600*24;   # 1 day

$deny_time：

　コンティニュアスポスティングチェックで使用する同一IPから許可する書き込み間隔（秒）。

    default: 10;        # 10 sec

$logdir:

　ログ記録ファイルを保管するディレクトリを指定します。
　デフォルトより変更したい場合は"/"より右側のみカスタマイズします。
　blosxom starter kit以外では、フルパスで指定して下さい。

    default: "$blosxom::plugin_dir/log"

$logfile:

  スパムと判定したコメントとトラックバックをログ記録するファイル名を指定します。
　デフォルトより変更したい場合は"/"より右側のみカスタマイズします。

　ログ記録する為のディレクトリとファイルは自動生成する様にしていますので、事前に
　作成する必要はありません。

    default: "$logdir/logfile.cgi"

$reflogfile:

  スパムと判定したリファラをログ記録するファイル名を指定します。
　デフォルトより変更したい場合は"/"より右側のみカスタマイズします。注意事項は同上です。

    default: "$logdir/reflogfile.cgi"

$iplogfile:

  前回投稿のＩＰアドレスをログ記録するファイル名を指定します。
　"/"より右側のみカスタマイズします。注意事項は同上です。

    default: "$logdir/iplogfile.cgi"

　＊）コンティニュアスポスティングチェックで使用します。

$log_limit:

  ログ記録量の制限をする場合"1"に設定します

    default: 0

$max_log_block:

  記録するログの上限 

    default: 50(1ログ500bytes前後として、50ログ25kbytes程度）

$max_reflog_block:

  記録するリファラログの上限 

    default: 100(1ログ500bytes前後として、100ログ50kbytes程度）

$char_convert:

　新規ログを自ブログの文字コードに変換する時"1"に設定
  Jcodeモジュールが必要です

    default: 1

$char_convert_for_old_record:

  ログファイルに記録されている過去ログを自ブログの文字コードに変換する時"1"に設定します
　（Jcodeモジュールの限界で完全に正しく文字コード変換出来ない場合があります。）

　変換は次回スパムログ記録時に実施されます。

  一度過去ログを文字コード変換してしまえば、次回以降は変換不要です。
　設定値を"0"に戻しておきましょう。

　Jcodeモジュールが必要です

    default: 0

@white_country：

　トップレベルドメインチェックに使用するホワイトカントリーを指定します。
　許可する国コードトップレベルドメイン（ccTLD: country code TLD）を、
　@inh_wordと同様に半角スペースで区切って指定します。
　
　http://www.nic.ad.jp/ja/dom/types.html#cctldを参考にして下さい。

    default: qw(jp us au to);

$plugins:

　コメントスパム対策するプラグインを指定します。
　（半角の"|"で区切って指定）

　 default: 'writeback|guestbook|newentry|mailpost';

・ダイナミックパスワードを使用する場合

writebackプラグインのコメント投稿に適用させるには、foot.htm等の
投稿用フレーバーの投稿フォームに以下を追加します。

<input type="hidden" name="d_pwd" value="$spam_blocker::sb_pwd" />

標準のblosxomの場合には、foot.writebackの投稿フォームの</form>の直前に
上記を追加すればいいです。

writebackプラグインのトラックバックに適用させるには、トラックバック
アドレスを表示させているfoot.htm等のフレーバーのアドレス表示用表記の
最後に?$spam_blocker::sb_pwdを追加します。
bskなら、以下の様に変更します。

$url$path/$fn.$writeback::trackback_flavour

　↓

$url$path/$fn.$writeback::trackback_flavour?$spam_blocker::sb_pwd

guestbookプラグインで適用する場合、プラグインの最後の方の
</form>の直前に以下を追加します。

<input type="hidden" name="d_pwd" value="$guestbook_pwd">

そして、Configurable variables等の初期設定に

our $guestbook_pwd = $spam_blocker::sb_pwd;

を追加します。


・refererプラグインの改造

refererプラグインに対するスパム対策をするためには、refererプラグインに
対して以下の改造を行います。

sub startの最初に、

    return 0 if (!$spam_blocker::sb_error_code);

と１行追加。

この意味は、
「スパムブロッカーでスパムと判定したら、refererプラグインは未使用にする。」
という事です。

＊）$switch{'block'} = 1;に設定していれば、コメントとトラックバックでスパム
　　が来ていればrefererプラグインまで処理が辿りつかないし、0に設定していた
　　としても、スパムのリファラは残したくないでしょうから、上記の処理で
　　問題無いでしょう。

・最新のスパムの表示させ方

表示させたい位置に、$spam_blocker::sb_last_infoを記述するだけです。

私の所ではfoot.htmlに、以下の記述を追加しています。

<div class="sidetitle">
最新のスパム
</div><!-- sidetitle end -->
<div class="side">
<br />
<ul>
 <li>$spam_blocker::sb_last_info</li>
</ul>
</div><!-- side end -->

  注）　ログ記録している時（$logger = 1）のみ有効です

◆その他

　無保証：　動作保障はありません。全て自己責任でお使い下さい。  
　ただし、ＢＢＳで聞いていただければ、可能な範囲でサポートします。

　！注意！

　以前公開したloggerプラグインでは、a_log, p_log, b_logの３つの
　ログを取れますが、本プラグインと併用しますと、b_logが効かなく
　なります。又、a_logもスパム部分には効かなくなります。
　しかし、本スクリプトでb_log相当のログ記録が取れますので、こちらの
　ログ記録を併用下さい。

◆履歴


配布を制限：　スパマーへの情報制限、配布方法は検討中

  2006.02.02  Version 1.01
　・コメント及びトラックバックで送られる情報から、$sepaの判定から外す
　　（ログ区切りの誤判定防止）
　・ログ記録制限時に読み出し〜再書き込みまでの期間をファイルロック
　　かける様にした。

  2005.12.31  Version 1.00

　・スパムチェック禁止位置変更、Jcodeモジュール設定変更、携帯判別位置変更
　・エラーメッセージをＩＥでも表示／日本語表示対応
　・タブをスペースに、無意味な""を''に 変更
　・リファラチェックに禁止ワード追加
　・トップレベルドメインチェック追加
　・ダイナミックパスワード追加、ユーザーパスワード廃止
　・暗号化サブルーチン部は別ライブラリとした
　・個別チェックの禁止アドレス設定機能追加
　・同一IPアドレスからの連続投稿チェック追加
　・禁止ワード自動付加機能追加
　・ホワイトカントリー機能追加
　・mailpost pluginに対応
　・ログ記録制限スクリプト部分を変更し、ログ上書きが起き難くした

  2005.10.09  Version 0.39e　(0.39a-dは欠番)
　・　携帯判別にボーダフォン3Gを追加
　・　リファラログ記録にremote_hostを追加
　・　newentry pluginに対応
　・　cc check廃止し、禁止ワードチェック追加
　・　深い階層までログディレクトリを自動生成
　・　aタグチェック強化（本文のみ→タイトル、名前、本文）
　・　log recording, message_disp sub 等いくつかのサブルーチンを修正（サブルーチン名も変更）
　・　ログ記録時Jcodeで文字コード変換、comment,excerptの改行をbr要素＋LFに変換
　・　過去に記録したログも自サイトの文字コードに変換可能（１回のみ実施を推奨）
　・　ログ記録行数制限、最終ログ記録時間変数設定（フレーバーで表示可能）
　・　ログ記録時メール送信機能追加（但し、スパム間隔が狭い場合は最初のスパムのみ送信）
　・　ログ記録時最新のスパム表示機能追加
　・　feedburner不具合対応
  ・　ユーザーエージェントの有無チェックを追加。
　・　言語情報とユーザーエージェントの複合チェックをトラックバックに追加。
　・　携帯からの投稿の場合は以下を強制的に設定した。
        $switch{'r'}=0; $switch{'c-l'}=0; $switch{'ae'}=0; $switch{'c-a'}=1; $switch{'c-nc'}=1; $switch{'c-nd'}=1;
        $switch{'t-l'}=0; $switch{'t-l_ua'}=0; $switch{'t-a'}=1; $switch{'t-nc'}=1; $switch{'t-nd'}=1;
  2005.07.23  Version 0.38a
　・　デフォルト設定でupを無効にした（暫定的に先行リリース）
　・　ドキュメントを手直しして添付した
　2005.02.26　Version 0.38
　・　コメントの言語チェックに言語情報の有無によるチェックを追加
　　　（デフォルトではこちらを設定）
　　　従来の言語チェックとの切り替え用に$strong変数を追加。
　・　トラックバックの言語チェックを追加（デフォルトで有効に設定）
　2005.02.04　Version 0.37
　・　デフォルト設定では海外からの投稿を許可する様に変更。
　・　a tagチェックを追加。
　・　YahooBBではカントリーコードがつかないので、YahooBBをカントリーコードとして
　　　使用する事にします。
  2004.12.26  Version 0.36b
　・50行目の誤記訂正
　　# my $logfile = "$reflogdir/$blosxom::reflogfile";
　　　　　↓
    # my $reflogfile = "$logdir/$blosxom::reflogfile";
  2004.12.25  Version 0.36a
　・log記録用ディレクトリ自動作成がうまく出来ない場合があるので、
　  一旦755で作成し、その後777にモード変更する様にした。
　・log記録用ディレクトリ作成はlog記録設定が有効の時のみ動作する
　　様に変更した。
　・ファイルの書き込みルーチンがリファレンスと認識されてしまう
　　場合があるので、アロー演算子を使うのをやめた。
　・ついでに記録ファイル名のデフォルトとして、.txtの拡張子を
　　つけておいた。これも誤認識対策になるかもしれない。
  2004.11.27  Version 0.36
　・トラックバックとリファラスパムのプロキシチェックを削除
　・コメントのプロキシチェックをaccept encoding checkに名称変更
　　（これに伴い、エラーコード変更）
　・@plugins、$trackback_flavourの指定をイニシャライズ領域へ移動
  2004.11.20  Version 0.35
　・リファラスパムチェック機能追加
　・それに伴い、エラーコードをグローバル変数化　→　他のプラグインで利用可能
　・writebackplusプラグイン対策でファイル名を0ext_spam_blockerに変更
　・standard spam checkサブルーチン作成し、スクリプトサイズを小さくした
　・変数設定部を準備しその直後にテストスクリプト記入可としてテスト容易化
　・referrer logを別ファイルで記録可能とした
  2004.11.14  Version 0.32c
　・プロキシチェック、カントリーチェックの判定式間違い修正(!= ---> !~)
　2004.11.07  Version 0.32b　
　・ドメイン表示無しチェック追加
　・カントリーコードチェック追加
　・パスワード及びプラグイン名のログ記録をコメント投稿時のみに変更
　・システムパスワードチェック機能削除
　・ログ記録ファイル指定をプラグイン側へ移動（標準blosxomでの設定容易化）
　　これに伴い、記録ディレクトリはプラグインディレクトリの下に専用ディレクトリ
　　を持つ様に変更
　・パスワードをログ記録から削除
　・ログ記録用ディレクトリが無ければ自動生成
　　これに伴いファイル指定方法変更
　・無コメントトラックバックのエラーコード変更
　・記録ディレクトリ自動生成
　・ハッシュを使った動作切り替え記述へ変更
　・ログ記録フォーマットをスターターキット付属のwriteback及びguestbookに
　　合わせた。
　・対象プラグインをwriteback系とguestbookの２タイプに限定
　2004.10.31  Version 0.21a 
　・機能実装追加　　proxy check機能、 ログ記録機能追加
　2004.10.24  Version 0.10  
　・最初のリリース 

以上