# Blosxom Plugin: seemore                                          -*- perl -*-
# Author: Todd Larason (jtl@molehill.org)
# Version: 0+3i
# Blosxom Home/Docs/Licensing: http://www.raelity.org/blosxom
# SeeMore plugin Home/Docs/Licensing:
#   http://molelog.molehill.org/blox/Computers/Internet/Web/Blosxom/SeeMore/

# 2004-09-11
# modified for ModBlosxom.pm by Makamaka<makamaka[at]donzoko.net>
#
# Blosxom Home/Docs/Licensing: http://www.blosxom.com/license.html

package ModBlosxom::plugin::Seemore;

use strict;


# regular expression to split on
my $seemore_split = qr/\f|<!-- more -->/;

# show the whole artcile on individual article pages?  Good for summaries,
# not so good for spoiler protection
my $more_on_article = 1;

sub new { bless {}, shift; }

sub start {
	my ($self, $blosxom) = @_;
	my $package = __PACKAGE__;

	$self->{message} = $blosxom->settings('seemore_message') || 'See more ...';

	while(<DATA>){
		last if /^(__END__)?$/;
		my ($flavour, $comp, $txt) = split(/\s+/,$_,3);
		$txt =~ s:\\n:\n:g;
		$blosxom->{templates}->{$flavour}->{"$package.$comp"} = $txt;
	}

	$blosxom->param( 'seemore::message' => $self->{message} );

	return 1;
}


sub story {
	my ($self, $blosxom, $path, $filename, $story_ref, $title_ref, $body_ref) = @_;
	my $more;

	($$body_ref, $more) = split $seemore_split, $$body_ref, 2;

	if(defined $more){
		if( $self->show_more_p($blosxom) ){
			$$body_ref .= $self->report($blosxom, 'divider', $path, $filename) . $more;
		}
		else{
			$$body_ref .= $self->report($blosxom, 'showmore', $path, $filename);
		}
	}
	return 1;
}

sub show_more_p {
	my ($self, $blosxom) = @_;
	my ($path_info) = $blosxom->settings([qw/path_info/]);

	if( $path_info =~ /(?:[^\/][-\w]*)\.\w+$/ ){
		return 1;
	}
	else{
		return 0;
	}
}


sub report {
	my ($self, $blosxom, $bit, $path, $fn) = @_;
	my ($flavour) = $blosxom->settings([qw/flavour/]);
	my $package   = __PACKAGE__;

	if(!defined $self->{template}){
		$self->{template} = $blosxom->get_template('', "$package.$bit", $flavour);
	}

	return $blosxom->interpolate($self->{template});
}



1;
__DATA__
error divider  <hr class="seemore">\n
error showmore <p><a href="$url$path/$fn.$flavour" class="seemore">$seemore::message</a></p>\n
rss   showmore <p><a href="$url$path_info/$fn.$default_flavour class="seemore">$seemore::message</a></p>\n
__END__

=head1 NAME

Blosxom Plug-in: seemore

=head1 SYNOPSIS

Purpose: Allows for long or spoiler-y posts to be split, with a "See more..." link

=head1 VERSION

0+2i

2nd test release

=head1 AUTHOR

Todd Larason  <jtl@molehill.org>, http://molelog.molehill.org/

=head1 BUGS

None known; address bug reports and comments to me or to the Blosxom
mailing list [http://www.yahoogroups.com/groups.blosxom].

=head1 Customization

=head2 Configuration variables

C<$seemore_split> is the regular expression used to find where to
split stories; the default matches either a form-feed character (as in
0+1i) or the string "<!-- more -->" (recommended for most peoples'
use).

C<$more_on_article> controls whether the full article is shown on
individual article pages, or only on pages with the special 'seemore' 
argument; it defaults to on (0+3i: this is a change of behavior from
previous versions).  Turning this on makes sense if you're using seemore
to put summaries on a main index paage, but probably not if you're using it
for spoiler protection.

C<$debug_level> can be set to a value between 0 and 5; 0 will output
no debug information, while 5 will be very verbose.  The default is 1,
and should be changed after you've verified the plugin is working
correctly.

=head2 Classes for CSS control

There's a class used, available for CSS customization.

  * C<seemore> -- the <hr> dividing the short version of the story
    from the rest, in the full-story view, and the <a> for the "See
    more ..." link in the short view.

=head2 Flavour-style files

If you want a format change that can't be made by CSS, you can
override the HTML generated by creating files similar to Blosxom's
flavour files.  They should be named seemore.I<bit>.I<flavour>; for
available I<bit>s and their default meanings, see the C<__DATA__>
section in the plugin.

=head1 LICENSE

this Blosxom Plug-in
Copyright 2003, Todd Larason

(This license is the same as Blosxom's)

Permission is hereby granted, free of charge, to any person obtaining a
copy of this software and associated documentation files (the "Software"),
to deal in the Software without restriction, including without limitation
the rights to use, copy, modify, merge, publish, distribute, sublicense,
and/or sell copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included
in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.


