#!/usr/bin/perl
# ---------------------------------------------------------------------
# awsxom: AWSからデータを取得して書影その他を作成
# Author: Fukazawa Tsuyoshi <cwww@pos.to>
# Version: 2005-07-31
# http://fukaz55.main.jp/
# ---------------------------------------------------------------------
package awsxom;

use strict;
use LWP::UserAgent;
use CGI qw/:standard/;
use FileHandle;

# --- Plug-in package variables --------
my $asoid = AmazonアソシエイトID";
my $devkey = "デベロッパートークン";
my $cachedir = "$blosxom::plugin_state_dir/aws_cache";	# XMLのキャッシュ用ディレクトリ
my $EXPIRE = 24;				# データを再読込する間隔（単位：時間）

my $VERSION = '1.0';
my $ua_name = "awsxom $VERSION";
my $debug_mode = 0;

# ---------------------------------------------------------------------
sub start {
	# キャッシュ用ディレクトリの作成
	if (!-e $cachedir) {
		my $mkdir_r = mkdir($cachedir, 0755);
		warn $mkdir_r
		? "blosxom : aws plugin > \$cachedir, $cachedir, created.\n"
		: "blosxom : aws plugin > mkdir missed:$!";
		$mkdir_r or return 0;
	}

	1;
}

# ---------------------------------------------------------------------
sub story {
	my ($pkg, $path, $filename, $story_ref, $title_ref, $body_ref) = @_;

	# ASIN/ISBNが書かれていたら置き換える
	$$body_ref =~ s/(?:ASIN|ISBN):([A-Z0-9]{10})/to_html($1)/ge;
	1;
}

# ---------------------------------------------------------------------
# ASINからAmazonのアフィリエイト用HTMLを作成
sub to_html {
	my $asin = shift;	# ASIN
	my $cache = "$cachedir/$asin.xml";
	my $url = "http://xml.amazon.co.jp/onca/xml3?t=$asoid&dev-t=$devkey&AsinSearch=$asin&type=lite&f=xml&locale=jp";	my $outfile = "$cachedir/$asin.html";

	# 取り込み直す必要はあるか？
	if (!(-e $cache) || (-M $cache > ($EXPIRE / 24))) {
	# AWSから情報を取得してキャッシュファイルに保存
		print_debug("GET $url\n");

		# UserAgent初期化
		my $ua = new LWP::UserAgent;
		$ua->agent($ua_name);
		$ua->timeout(60);

		my $rtn = $ua->mirror($url, $cache);
		print_debug($rtn->status_line . " - failed.\n") and return undef if ($rtn->is_error);
		print_debug($rtn->status_line . " - not successed.\n") and return undef if (!$rtn->is_success);
		print_debug("successed.\n");
	}

	# キャッシュからXMLを読み込んで解析
	my $content = getFile($cache);
	my %detail = parseXML($content, $asin);

	# テンプレートを展開。エラーの場合はエラー文字列を返す
	my $form;
	if (!defined($detail{"ErrorMsg"})) {
		$form = &$blosxom::template($blosxom::path, 'awsxom', 'html');
		$form =~ s/\$(\w+)/$detail{$1}/ge;
	}
	else {
		$form = "<p>" . $detail{"ErrorMsg"} . "</p>";
	}

	return $form;
}

# ---------------------------------------------------------------------
# ファイルを読み込む
sub getFile {
	my $cache = shift;
	my $fh = new FileHandle;

	$fh->open($cache);
	my @data = <$fh>;
	$fh->close();
	my $content = join('', @data);
	return undef if (!$content);

	return $content;
}

# ---------------------------------------------------------------------
sub parseXML {
	my ($buf, $asin) = @_;
	my %detail;

	# Amazonへのリンク
	$detail{"Link"} = "http://www.amazon.co.jp/exec/obidos/ASIN/$asin/ref=nosim/$asoid";

	# 個々の要素の抽出
	$detail{"Asin"} = $1 if ($buf =~ /<Asin>([^<]*)<\/Asin>/);
	$detail{"ProductName"} = $1 if ($buf =~ /<ProductName>([^<]*)<\/ProductName>/);
	$detail{"Catalog"} = $1 if ($buf =~ /<Catalog>([^<]*)<\/Catalog>/);
	$detail{"ReleaseDate"} = $1 if ($buf =~ /<ReleaseDate>([^<]*)<\/ReleaseDate>/);
	$detail{"Manufacturer"} = $1 if ($buf =~ /<Manufacturer>([^<]*)<\/Manufacturer>/);
	$detail{"ImageUrlSmall"} = $1 if ($buf =~ /<ImageUrlSmall>([^<]*)<\/ImageUrlSmall>/);
	$detail{"ImageUrlMedium"} = $1 if ($buf =~ /<ImageUrlMedium>([^<]*)<\/ImageUrlMedium>/);
	$detail{"ImageUrlLarge"} = $1 if ($buf =~ /<ImageUrlLarge>([^<]*)<\/ImageUrlLarge>/);
	$detail{"Availability"} = $1 if ($buf =~ /<Availability>([^<]*)<\/Availability>/);
	$detail{"ListPrice"} = $1 if ($buf =~ /<ListPrice>([^<]*)<\/ListPrice>/);
	$detail{"OurPrice"} = $1 if ($buf =~ /<OurPrice>([^<]*)<\/OurPrice>/);
	$detail{"UsedPrice"} = $1 if ($buf =~ /<UsedPrice>([^<]*)<\/UsedPrice>/);

	# 著者部分の解析
	$detail{"Author"} = parseAuthor($buf, "Authors", "Author");
	$detail{"Artist"} = parseAuthor($buf, "Artists", "Artist");
	# CDの場合、AuthorにArtistを入れておく
	$detail{"Author"} = $detail{"Artist"} if ($detail{"Author"} eq "");

	# エラー？
	if ($buf =~ /<ErrorMsg>([^<]*)<\/ErrorMsg>/) {
		$detail{"ErrorMsg"} = $1;
	}

	return %detail;
}

# ---------------------------------------------------------------------
# Author, Artists 部分の解析
sub parseAuthor {
	my ($buf, $parent, $child) = @_;
	my @authors;
	my $author;

	if ($buf =~ /<$parent>(.*)?<\/$parent>/s) {
		my $auth = $1;
		@authors = ($auth =~ /<$child>([^<]*)<\/$child>/gmi);
	}
	if (@authors > 1) {
		$author = join ", ", @authors;
	} else {
		$author = $authors[0];
	}
	return $author;
}

# ---------------------------------------------------------------------
# デバッグ用
sub print_debug {
	return if (!$debug_mode);

	my $fd = new FileHandle;
	$fd->open("awsxom.log", "a");
	print $fd "$_[0]";
	$fd->close();
}

1;
